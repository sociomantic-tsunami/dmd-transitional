From a94f59965d2450b74866df03d8d06acb4b0b6040 Mon Sep 17 00:00:00 2001
From: Walter Bright <walter@walterbright.com>
Date: Mon, 25 Apr 2016 01:02:49 -0700
Subject: [PATCH 14/21] fix Issue 11585 - ICE(cgcod.c) with SIMD and -O

---
 src/backend/cgcod.c     |  4 ++--
 src/backend/cod1.c      |  2 ++
 test/runnable/testxmm.d | 11 +++++++++++
 3 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/src/backend/cgcod.c b/src/backend/cgcod.c
index 69ecb4cfc..667437960 100644
--- a/src/backend/cgcod.c
+++ b/src/backend/cgcod.c
@@ -2151,7 +2151,7 @@ bool cssave(elem *e,regm_t regm,unsigned opsflag)
             return false;
 
         //printf("cssave(e = %p, regm = %s, opsflag = x%x)\n", e, regm_str(regm), opsflag);
-        regm &= mBP | ALLREGS | mES;    /* just to be sure              */
+        regm &= mBP | ALLREGS | mES | XMMREGS;    /* just to be sure              */
 
 #if 0
         /* Do not register CSEs if they are register variables and      */
@@ -2575,7 +2575,7 @@ code *codelem(elem *e,regm_t *pretregs,bool constflag)
         if (e->Ecount)                          /* if common subexp     */
         {
             /* if no return value       */
-            if ((*pretregs & (mSTACK | mES | ALLREGS | mBP)) == 0)
+            if ((*pretregs & (mSTACK | mES | ALLREGS | mBP | XMMREGS)) == 0)
             {   if (tysize(e->Ety) == 1)
                     *pretregs |= BYTEREGS;
                 else if (tybasic(e->Ety) == TYdouble || tybasic(e->Ety) == TYdouble_alias)
diff --git a/src/backend/cod1.c b/src/backend/cod1.c
index 26b206dff..d96ac6aad 100644
--- a/src/backend/cod1.c
+++ b/src/backend/cod1.c
@@ -572,6 +572,8 @@ code *loadea(elem *e,code *cs,unsigned op,unsigned reg,targ_size_t offset,
   {
         assert(!EOP(e));                /* can't handle this            */
         regm_t rm = regcon.cse.mval & ~regcon.cse.mops & ~regcon.mvar; // possible regs
+        if (op == 0xFF && reg == 6)
+            rm &= ~XMMREGS;             // can't PUSH an XMM register
         if (sz > REGSIZE)               // value is in 2 or 4 registers
         {
                 if (I16 && sz == 8)     // value is in 4 registers
diff --git a/test/runnable/testxmm.d b/test/runnable/testxmm.d
index 7764a8104..a873e5d53 100644
--- a/test/runnable/testxmm.d
+++ b/test/runnable/testxmm.d
@@ -1424,6 +1424,17 @@ void test15123()
 }
 
 /*****************************************/
+// https://issues.dlang.org/show_bug.cgi?id=11585
+
+ubyte16 test11585(ubyte16* d)
+{
+    ubyte16 a;
+    if (d is null) return a;
+
+    return __simd(XMM.PCMPEQB, *d, *d);
+}
+
+/*****************************************/
 
 int main()
 {
-- 
2.12.2

